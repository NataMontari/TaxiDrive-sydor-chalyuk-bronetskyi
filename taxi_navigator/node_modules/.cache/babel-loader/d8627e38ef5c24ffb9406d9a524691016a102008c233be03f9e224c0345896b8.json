{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst clientLocation = {\n  lat: 49.8397,\n  lng: 24.0297\n};\nfunction DriverMapPage() {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 49.8429,\n    lng: 24.0263\n  });\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        alert('Error: The Geolocation service failed.');\n      });\n    } else {\n      alert('Error: Your browser doesn\\'t support geolocation.');\n    }\n  }, []);\n  const onMapLoad = map => {\n    // Додайте будь-який необхідний ініціалізаційний код тут\n  };\n  const onDragEnd = () => {\n    // Оновлюємо центр карти після перетягування\n    setCurrentLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng()\n    });\n  };\n\n  // Збереження посилання на карту\n  const mapRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentLocation,\n      zoom: 13,\n      onLoad: onMapLoad,\n      onDragEnd: onDragEnd,\n      options: {\n        draggable: true,\n        zoomControl: true\n      }\n      // Зберігаємо посилання на об'єкт карти\n      ,\n      onLoad: map => mapRef.current = map,\n      children: [/*#__PURE__*/_jsxDEV(DirectionsService, {\n        options: {\n          destination: clientLocation,\n          origin: currentLocation,\n          travelMode: 'DRIVING'\n        },\n        callback: response => {\n          if (response.status === 'OK') {\n            setDirectionsResponse(response);\n          } else {\n            console.log('Directions request failed due to ', response.status);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        options: {\n          directions: directionsResponse\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(DriverMapPage, \"X4W4Da+PmCjjK7dQ/pegC2KFqxg=\");\n_c = DriverMapPage;\nexport default DriverMapPage;\nvar _c;\n$RefreshReg$(_c, \"DriverMapPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","DirectionsRenderer","DirectionsService","jsxDEV","_jsxDEV","containerStyle","width","height","clientLocation","lat","lng","DriverMapPage","_s","currentLocation","setCurrentLocation","directionsResponse","setDirectionsResponse","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","alert","onMapLoad","map","onDragEnd","mapRef","current","center","useRef","googleMapsApiKey","children","mapContainerStyle","zoom","onLoad","options","draggable","zoomControl","destination","origin","travelMode","callback","response","status","console","log","fileName","_jsxFileName","lineNumber","columnNumber","directions","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n};\n\nconst clientLocation = {\n  lat: 49.8397,\n  lng: 24.0297,\n};\n\nfunction DriverMapPage() {\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 49.8429,\n    lng: 24.0263,\n  });\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setCurrentLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        () => {\n          alert('Error: The Geolocation service failed.');\n        }\n      );\n    } else {\n      alert('Error: Your browser doesn\\'t support geolocation.');\n    }\n  }, []);\n\n  const onMapLoad = (map) => {\n    // Додайте будь-який необхідний ініціалізаційний код тут\n  };\n\n  const onDragEnd = () => {\n    // Оновлюємо центр карти після перетягування\n    setCurrentLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  // Збереження посилання на карту\n  const mapRef = React.useRef();\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentLocation}\n        zoom={13}\n        onLoad={onMapLoad}\n        onDragEnd={onDragEnd}\n        options={{\n          draggable: true,\n          zoomControl: true,\n        }}\n        // Зберігаємо посилання на об'єкт карти\n        onLoad={(map) => (mapRef.current = map)}\n      >\n        <DirectionsService\n          options={{\n            destination: clientLocation,\n            origin: currentLocation,\n            travelMode: 'DRIVING',\n          }}\n          callback={(response) => {\n            if (response.status === 'OK') {\n              setDirectionsResponse(response);\n            } else {\n              console.log('Directions request failed due to ', response.status);\n            }\n          }}\n        />\n        {directionsResponse && (\n          <DirectionsRenderer options={{ directions: directionsResponse }} />\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default DriverMapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}