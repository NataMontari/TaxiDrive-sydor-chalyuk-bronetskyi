{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\nimport './DriverMapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst clientLocation = {\n  lat: 49.8397,\n  lng: 24.0297\n};\nfunction DriverMapPage() {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 49.8429,\n    lng: 24.0263\n  });\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const mapRef = useRef();\n  const directionsServiceRef = useRef();\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        alert('Error: The Geolocation service failed.');\n      });\n    } else {\n      alert('Error: Your browser doesn\\'t support geolocation.');\n    }\n  }, []);\n  const onLoad = map => {\n    mapRef.current = map;\n    fetchDirections(); // Fetch directions only after map is loaded\n  };\n  const fetchDirections = () => {\n    if (!mapRef.current) return; // Ensure map is loaded\n\n    const origin = new window.google.maps.LatLng(currentLocation.lat, currentLocation.lng);\n    const destination = new window.google.maps.LatLng(clientLocation.lat, clientLocation.lng);\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirectionsResponse(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n  useEffect(() => {\n    if (currentLocation.lat && currentLocation.lng && mapRef.current) {\n      fetchDirections(); // Call directions only when current location changes and map is loaded\n    }\n  }, [currentLocation, mapRef.current]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\",\n    onLoad: () => console.log('LoadScript loaded successfully'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-page\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: currentLocation,\n        zoom: 13,\n        onLoad: onLoad,\n        onUnmount: () => console.log('Map unmounted'),\n        children: directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(DriverMapPage, \"AnSyVGhHwd2WNp3JjVX09KpZCsY=\");\n_c = DriverMapPage;\nexport default DriverMapPage;\nvar _c;\n$RefreshReg$(_c, \"DriverMapPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMap","LoadScript","DirectionsRenderer","DirectionsService","jsxDEV","_jsxDEV","containerStyle","width","height","clientLocation","lat","lng","DriverMapPage","_s","currentLocation","setCurrentLocation","directionsResponse","setDirectionsResponse","mapRef","directionsServiceRef","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","alert","onLoad","map","current","fetchDirections","origin","window","google","maps","LatLng","destination","directionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","console","error","googleMapsApiKey","log","children","className","mapContainerStyle","center","zoom","onUnmount","directions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\nimport './DriverMapPage.css';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n};\n\nconst clientLocation = {\n  lat: 49.8397,\n  lng: 24.0297,\n};\n\nfunction DriverMapPage() {\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 49.8429,\n    lng: 24.0263,\n  });\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const mapRef = useRef();\n  const directionsServiceRef = useRef();\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setCurrentLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        () => {\n          alert('Error: The Geolocation service failed.');\n        }\n      );\n    } else {\n      alert('Error: Your browser doesn\\'t support geolocation.');\n    }\n  }, []);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n    fetchDirections(); // Fetch directions only after map is loaded\n  };\n\n  const fetchDirections = () => {\n    if (!mapRef.current) return; // Ensure map is loaded\n\n    const origin = new window.google.maps.LatLng(currentLocation.lat, currentLocation.lng);\n    const destination = new window.google.maps.LatLng(clientLocation.lat, clientLocation.lng);\n\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirectionsResponse(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (currentLocation.lat && currentLocation.lng && mapRef.current) {\n      fetchDirections(); // Call directions only when current location changes and map is loaded\n    }\n  }, [currentLocation, mapRef.current]);\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\"\n      onLoad={() => console.log('LoadScript loaded successfully')}\n    >\n      <div className=\"driver-map-page\">\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={currentLocation}\n          zoom={13}\n          onLoad={onLoad}\n          onUnmount={() => console.log('Map unmounted')}\n        >\n          {directionsResponse && (\n            <DirectionsRenderer directions={directionsResponse} />\n          )}\n        </GoogleMap>\n      </div>\n    </LoadScript>\n  );\n}\n\nexport default DriverMapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}