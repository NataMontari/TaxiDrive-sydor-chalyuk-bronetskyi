{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/web_project/my-react-app/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProfilePage.css'; // Переконайтеся, що це правильний шлях до вашого CSS файлу\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [userData, setUserData] = useState({\n    fullName: '',\n    phoneNumber: '',\n    email: '',\n    languages: [],\n    rating: 0,\n    photo: ''\n  });\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n  useEffect(() => {\n    const username = localStorage.getItem('currentUser');\n    const storedUserData = JSON.parse(localStorage.getItem(username));\n    if (storedUserData) {\n      setUserData({\n        ...storedUserData\n      });\n    }\n  }, []);\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n    if (!nameRegex.test(userData.fullName)) {\n      alert(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      return false;\n    }\n    if (!phoneRegex.test(userData.phoneNumber)) {\n      alert(\"Phone number must start with + and contain 10 to 16 digits.\");\n      return false;\n    }\n    if (!emailRegex.test(userData.email)) {\n      alert(\"Email must contain '@'.\");\n      return false;\n    }\n    return true;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"languages\") {\n      setUserData(prevData => ({\n        ...prevData,\n        [name]: [...e.target.selectedOptions].map(option => option.value)\n      }));\n    } else {\n      setUserData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleSaveChanges = () => {\n    if (validateForm()) {\n      const username = localStorage.getItem('currentUser');\n      localStorage.setItem(username, JSON.stringify(userData));\n      alert('Profile updated successfully.');\n    }\n  };\n  const handleDeleteAccount = () => {\n    const username = localStorage.getItem('currentUser');\n    localStorage.removeItem(username);\n    localStorage.removeItem('isLoggedIn');\n    window.location.href = '/';\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('isLoggedIn');\n    window.location.href = '/';\n  };\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setUserData(prevData => ({\n        ...prevData,\n        photo: reader.result\n      }));\n    };\n    reader.readAsDataURL(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-photo\",\n      children: [userData.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.photo,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No photo uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handlePhotoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        name: \"languages\",\n        value: userData.languages,\n        onChange: handleChange,\n        size: 5,\n        children: popularLanguages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-changes-btn\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"pG7NQXwW7LvWoGV+fLCha6Pj1Fw=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProfilePage","_s","userData","setUserData","fullName","phoneNumber","email","languages","rating","photo","popularLanguages","username","localStorage","getItem","storedUserData","JSON","parse","validateForm","nameRegex","phoneRegex","emailRegex","test","alert","handleChange","e","name","value","target","prevData","selectedOptions","map","option","handleSaveChanges","setItem","stringify","handleDeleteAccount","removeItem","window","location","href","handleLogout","handlePhotoChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","multiple","size","language","onClick","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/web_project/my-react-app/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProfilePage.css'; // Переконайтеся, що це правильний шлях до вашого CSS файлу\n\nfunction ProfilePage() {\n  const [userData, setUserData] = useState({\n    fullName: '',\n    phoneNumber: '',\n    email: '',\n    languages: [],\n    rating: 0,\n    photo: '',\n  });\n\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n\n  useEffect(() => {\n    const username = localStorage.getItem('currentUser');\n    const storedUserData = JSON.parse(localStorage.getItem(username));\n    if (storedUserData) {\n      setUserData({ ...storedUserData });\n    }\n  }, []);\n\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n\n    if (!nameRegex.test(userData.fullName)) {\n      alert(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      return false;\n    }\n\n    if (!phoneRegex.test(userData.phoneNumber)) {\n      alert(\"Phone number must start with + and contain 10 to 16 digits.\");\n      return false;\n    }\n\n    if (!emailRegex.test(userData.email)) {\n      alert(\"Email must contain '@'.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"languages\") {\n      setUserData((prevData) => ({\n        ...prevData,\n        [name]: [...e.target.selectedOptions].map(option => option.value),\n      }));\n    } else {\n      setUserData((prevData) => ({\n        ...prevData,\n        [name]: value,\n      }));\n    }\n  };\n\n  const handleSaveChanges = () => {\n    if (validateForm()) {\n      const username = localStorage.getItem('currentUser');\n      localStorage.setItem(username, JSON.stringify(userData));\n      alert('Profile updated successfully.');\n    }\n  };\n  const handleDeleteAccount = () => {\n    const username = localStorage.getItem('currentUser');\n    localStorage.removeItem(username); \n    localStorage.removeItem('isLoggedIn'); \n    window.location.href = '/';\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('isLoggedIn');\n    window.location.href = '/';\n  };\n\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setUserData((prevData) => ({\n        ...prevData,\n        photo: reader.result,\n      }));\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <h2>User Profile</h2>\n      <div className=\"profile-photo\">\n        {userData.photo ? <img src={userData.photo} alt=\"Profile\" /> : <p>No photo uploaded</p>}\n        <input type=\"file\" onChange={handlePhotoChange} />\n      </div>\n      <div className=\"profile-info\">\n        {/* Поля для введення даних */}\n        <select multiple={true} name=\"languages\" value={userData.languages} onChange={handleChange} size={5}>\n          {popularLanguages.map((language) => (\n            <option key={language} value={language}>{language}</option>\n          ))}\n        </select>\n        <button className=\"save-changes-btn\" onClick={handleSaveChanges}>Save Changes</button>\n      </div>\n      <div className=\"profile-actions\">\n        {/* Кнопки для виходу з акаунту та видалення акаунту */}\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}