{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/taxi_navigator/src/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [languages, setLanguages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n    if (!nameRegex.test(fullName)) {\n      setMessage(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      setMessageType('error');\n      return false;\n    }\n    if (!phoneRegex.test(phoneNumber)) {\n      setMessage(\"Phone number must start with + and contain 10 to 16 digits.\");\n      setMessageType('error');\n      return false;\n    }\n    if (!emailRegex.test(email)) {\n      setMessage(\"Email must contain '@'.\");\n      setMessageType('error');\n      return false;\n    }\n    if (password.length < 8) {\n      setMessage(\"Password must contain at least 8 characters.\");\n      setMessageType('error');\n      return false;\n    }\n    if (localStorage.getItem(email)) {\n      setMessage(\"An account with this email already exists.\");\n      setMessageType('error');\n      return false;\n    }\n    return true; // All validations passed\n  };\n  const handleRegister = () => {\n    if (validateForm()) {\n      const userData = {\n        username,\n        email,\n        password,\n        fullName,\n        phoneNumber,\n        languages\n      };\n      localStorage.setItem(email, JSON.stringify(userData));\n      localStorage.setItem('currentUser', email);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Send confirmation email\n      fetch('http://localhost:3000/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username: fullName\n        }) // Use fullName as the username\n      }).then(response => response.json()).then(data => {\n        console.log('Email sent:', data);\n        window.location.href = '/profile'; // Redirect to profile page after registration and email\n      }).catch(error => {\n        console.error('Error sending email:', error);\n        setMessage(\"Failed to send confirmation email.\");\n        setMessageType('error');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: languages,\n        onChange: e => setLanguages([...e.target.selectedOptions].map(option => option.value)),\n        size: 5,\n        children: popularLanguages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"TIjaGrgsxfI3chOdb9KyTVBXFjM=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","email","setEmail","fullName","setFullName","phoneNumber","setPhoneNumber","languages","setLanguages","message","setMessage","messageType","setMessageType","popularLanguages","validateForm","nameRegex","phoneRegex","emailRegex","test","length","localStorage","getItem","handleRegister","userData","setItem","JSON","stringify","fetch","method","headers","body","then","response","json","data","console","log","window","location","href","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","multiple","selectedOptions","map","option","size","language","onClick","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/taxi_navigator/src/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './RegisterPage.css';\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [languages, setLanguages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n\n    if (!nameRegex.test(fullName)) {\n      setMessage(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (!phoneRegex.test(phoneNumber)) {\n      setMessage(\"Phone number must start with + and contain 10 to 16 digits.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (!emailRegex.test(email)) {\n      setMessage(\"Email must contain '@'.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (password.length < 8) {\n      setMessage(\"Password must contain at least 8 characters.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (localStorage.getItem(email)) {\n      setMessage(\"An account with this email already exists.\");\n      setMessageType('error');\n      return false;\n    }\n\n    return true; // All validations passed\n  };\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const userData = { username, email, password, fullName, phoneNumber, languages };\n      localStorage.setItem(email, JSON.stringify(userData));\n      localStorage.setItem('currentUser', email);\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Send confirmation email\n      fetch('http://localhost:3000/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, username: fullName }) // Use fullName as the username\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Email sent:', data);\n        window.location.href = '/profile'; // Redirect to profile page after registration and email\n      })\n      .catch(error => {\n        console.error('Error sending email:', error);\n        setMessage(\"Failed to send confirmation email.\");\n        setMessageType('error');\n      });\n    }\n  };\n\n  return (\n    <div className=\"register-page\">\n      <h2>Register</h2>\n      {message && <div className={`message ${messageType}`}>{message}</div>}\n      <div className=\"input-container\">\n        <input type=\"text\" placeholder=\"Full Name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <select multiple={true} value={languages} onChange={(e) => setLanguages([...e.target.selectedOptions].map(option => option.value))} size={5}>\n          {popularLanguages.map(language => <option key={language} value={language}>{language}</option>)}\n        </select>\n        <button onClick={handleRegister}>Register</button>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}