{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/web_project/my-react-app/src/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [languages, setLanguages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n  const userExists = () => {\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const existingUser = JSON.parse(localStorage.getItem(key));\n      if (existingUser.username === username || existingUser.email === email || existingUser.fullName === fullName || existingUser.phoneNumber === phoneNumber) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n    if (!nameRegex.test(fullName)) {\n      setMessage(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      setMessageType('error');\n      return false;\n    }\n    if (!phoneRegex.test(phoneNumber)) {\n      setMessage(\"Phone number must start with + and contain 10 to 16 digits.\");\n      setMessageType('error');\n      return false;\n    }\n    if (!emailRegex.test(email)) {\n      setMessage(\"Email must contain '@'.\");\n      setMessageType('error');\n      return false;\n    }\n    if (password.length < 8) {\n      setMessage(\"Password must contain at least 8 characters.\");\n      setMessageType('error');\n      return false;\n    }\n    if (languages.length === 0) {\n      setMessage(\"Please select at least one language.\");\n      setMessageType('error');\n      return false;\n    }\n    if (userExists()) {\n      setMessage(\"User with this username, full name, phone number, or email already exists.\");\n      setMessageType('error');\n      return false;\n    }\n    return true; // All validations passed\n  };\n  const handleRegister = () => {\n    if (validateForm()) {\n      const userData = {\n        username,\n        email,\n        password,\n        fullName,\n        phoneNumber,\n        languages\n      };\n      localStorage.setItem(username, JSON.stringify(userData));\n      setMessage(\"Registration successful. You can now log in.\");\n      setMessageType('success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: \"// Input fields and registration button...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"TIjaGrgsxfI3chOdb9KyTVBXFjM=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","email","setEmail","fullName","setFullName","phoneNumber","setPhoneNumber","languages","setLanguages","message","setMessage","messageType","setMessageType","popularLanguages","userExists","i","localStorage","length","key","existingUser","JSON","parse","getItem","validateForm","nameRegex","phoneRegex","emailRegex","test","handleRegister","userData","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/web_project/my-react-app/src/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './RegisterPage.css';\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [languages, setLanguages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  const popularLanguages = [\"English\", \"Spanish\", \"Mandarin\", \"French\", \"German\", \"Arabic\", \"Hindi\", \"Bengali\", \"Russian\", \"Portuguese\", \"Ukrainian\"];\n\n  const userExists = () => {\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const existingUser = JSON.parse(localStorage.getItem(key));\n      if (existingUser.username === username || existingUser.email === email ||\n          existingUser.fullName === fullName || existingUser.phoneNumber === phoneNumber) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const validateForm = () => {\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n    const phoneRegex = /^\\+[0-9]{9,15}$/;\n    const emailRegex = /.*@.*/;\n\n    if (!nameRegex.test(fullName)) {\n      setMessage(\"Full name must consist of first and last name, starting with capital letters, and only contain letters.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (!phoneRegex.test(phoneNumber)) {\n      setMessage(\"Phone number must start with + and contain 10 to 16 digits.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (!emailRegex.test(email)) {\n      setMessage(\"Email must contain '@'.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (password.length < 8) {\n      setMessage(\"Password must contain at least 8 characters.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (languages.length === 0) {\n      setMessage(\"Please select at least one language.\");\n      setMessageType('error');\n      return false;\n    }\n\n    if (userExists()) {\n      setMessage(\"User with this username, full name, phone number, or email already exists.\");\n      setMessageType('error');\n      return false;\n    }\n\n    return true; // All validations passed\n  };\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const userData = { username, email, password, fullName, phoneNumber, languages };\n      localStorage.setItem(username, JSON.stringify(userData));\n      setMessage(\"Registration successful. You can now log in.\");\n      setMessageType('success');\n    }\n  };\n\n  return (\n    <div className=\"register-page\">\n      <h2>Register</h2>\n      {message && <div className={`message ${messageType}`}>{message}</div>}\n      <div className=\"input-container\">\n        // Input fields and registration button...\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}