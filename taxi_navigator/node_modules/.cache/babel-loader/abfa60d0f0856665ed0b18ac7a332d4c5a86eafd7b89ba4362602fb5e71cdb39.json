{"ast":null,"code":"var _jsxFileName = \"/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// function DriverMapPage() {\n//   return (\n//     <div className=\"driver-map-page\">\n//       <h2>Driver Map</h2>\n//     </div>\n//   );\n// }\n\n// export default DriverMapPage;\n\n// поганий код:\n// import React, { useEffect, useRef } from 'react';\n// import L from 'leaflet';\n// import 'leaflet/dist/leaflet.css';\n\n// const driverLocation = [50.4501, 30.5234]; // Київ\n// const clientLocation = [50.45466, 30.5298]; // Трохи віддалік у Києві\n\n// function DriverMapPage() {\n//   const mapRef = useRef(null);\n\n//   useEffect(() => {\n//     if (mapRef.current) return; // Ініціалізуємо карту\n\n//     mapRef.current = L.map('map', {\n//       center: driverLocation,\n//       zoom: 13,\n//     });\n\n//     L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       attribution: '&copy; OpenStreetMap contributors',\n//     }).addTo(mapRef.current);\n\n//     // локації на карті\n//     L.marker(driverLocation).addTo(mapRef.current)\n//       .bindPopup('Водій')\n//       .openPopup();\n\n//     L.marker(clientLocation).addTo(mapRef.current)\n//       .bindPopup('Клієнт')\n//       .openPopup();\n\n//     // Маршрут відсутній, бо Leaflet не підтримує маршрутизацію без зовнішніх API\n//     // Якщо робити з маршрутами, то треба бавитись із API\n//     // ПРосто зробив будь-як, щоб було \n//   }, []);\n\n//   return <div id=\"map\" style={{ height: '400px', width: '100%' }}></div>;\n// }\n\n// export default DriverMapPage;\n\n// Далі йде нормальний закоментований код де можна маршрути і тд і тп\n// проте треба для цього зрробити API ключ \n\nimport React from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n//розташування водія\nconst driverLocation = {\n  lat: 49.8429,\n  // УКУ, Львів\n  lng: 24.0263\n};\n\n// розташування клієнта\nconst clientLocation = {\n  lat: 49.8397,\n  // десь поблизу \n  lng: 24.0297\n};\nfunction DriverMapPage() {\n  _s();\n  const [directions, setDirections] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    const origin = new window.google.maps.LatLng(driverLocation.lat, driverLocation.lng);\n    const destination = new window.google.maps.LatLng(clientLocation.lat, clientLocation.lng);\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: driverLocation,\n      zoom: 10,\n      onLoad: onLoad,\n      children: directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(DriverMapPage, \"vIdYCTih8yPQR+nOj3yyDLQXDuQ=\");\n_c = DriverMapPage;\nexport default DriverMapPage;\nvar _c;\n$RefreshReg$(_c, \"DriverMapPage\");","map":{"version":3,"names":["React","GoogleMap","LoadScript","DirectionsRenderer","DirectionsService","jsxDEV","_jsxDEV","containerStyle","width","height","driverLocation","lat","lng","clientLocation","DriverMapPage","_s","directions","setDirections","useState","onLoad","useCallback","callback","map","bounds","window","google","maps","LatLngBounds","fitBounds","origin","LatLng","destination","directionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","console","error","googleMapsApiKey","children","mapContainerStyle","center","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vbronetskyi/UCU/web/taxi_navigator/src/DriverMapPage.js"],"sourcesContent":["// import React from 'react';\n\n// function DriverMapPage() {\n//   return (\n//     <div className=\"driver-map-page\">\n//       <h2>Driver Map</h2>\n//     </div>\n//   );\n// }\n\n// export default DriverMapPage;\n\n// поганий код:\n// import React, { useEffect, useRef } from 'react';\n// import L from 'leaflet';\n// import 'leaflet/dist/leaflet.css';\n\n// const driverLocation = [50.4501, 30.5234]; // Київ\n// const clientLocation = [50.45466, 30.5298]; // Трохи віддалік у Києві\n\n// function DriverMapPage() {\n//   const mapRef = useRef(null);\n\n//   useEffect(() => {\n//     if (mapRef.current) return; // Ініціалізуємо карту\n\n//     mapRef.current = L.map('map', {\n//       center: driverLocation,\n//       zoom: 13,\n//     });\n\n//     L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       attribution: '&copy; OpenStreetMap contributors',\n//     }).addTo(mapRef.current);\n\n//     // локації на карті\n//     L.marker(driverLocation).addTo(mapRef.current)\n//       .bindPopup('Водій')\n//       .openPopup();\n\n//     L.marker(clientLocation).addTo(mapRef.current)\n//       .bindPopup('Клієнт')\n//       .openPopup();\n\n//     // Маршрут відсутній, бо Leaflet не підтримує маршрутизацію без зовнішніх API\n//     // Якщо робити з маршрутами, то треба бавитись із API\n//     // ПРосто зробив будь-як, щоб було \n//   }, []);\n\n//   return <div id=\"map\" style={{ height: '400px', width: '100%' }}></div>;\n// }\n\n// export default DriverMapPage;\n\n// Далі йде нормальний закоментований код де можна маршрути і тд і тп\n// проте треба для цього зрробити API ключ \n\nimport React from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer, DirectionsService } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n//розташування водія\nconst driverLocation = {\n  lat: 49.8429, // УКУ, Львів\n  lng: 24.0263\n};\n\n// розташування клієнта\nconst clientLocation = {\n  lat: 49.8397, // десь поблизу \n  lng: 24.0297\n};\n\n\nfunction DriverMapPage() {\n  const [directions, setDirections] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    const origin = new window.google.maps.LatLng(driverLocation.lat, driverLocation.lng);\n    const destination = new window.google.maps.LatLng(clientLocation.lat, clientLocation.lng);\n\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }, []);\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyBFZBQ1gPyJcp1NMDNs_1P22ThRMhYZdg4\"\n    >\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={driverLocation}\n        zoom={10}\n        onLoad={onLoad}\n      >\n        {directions && <DirectionsRenderer directions={directions} />}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default DriverMapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}